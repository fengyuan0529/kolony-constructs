@PART[KC-MV-domeglass,KC-MV-domelab,KC-MV-domeshop,KC-MV-infhab]:FOR[KolonyConstructs]:NEEDS[Kerbalism]
{
	// Kerbalism forces the habitat to be inflated if kerbals are inside
	@CrewCapacity = #$MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$

	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste processor
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		running = true
	}

	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = Monoprop+O2 fuel cell
		capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		running = false
	}

	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}

	MODULE
	{
		name = Configure
		title = Pod
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 2
			}
		}

		SETUP
		{
			name = Scrubber
			desc = A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}

		SETUP
		{
			name = Pressure Control
			desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			tech = engineering101
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControl
			}

			RESOURCE
			{
				name = Nitrogen
				amount = 4000
				maxAmount = 4000
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = spaceExploration
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 100
				maxAmount = 100

			}
		}

		SETUP
		{
			name = Waste Processor
			desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = advExploration
			mass = 0.05
			cost = 500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}

			RESOURCE
			{
				name = Waste
				amount = 2
				maxAmount = 2

			}
		}

		SETUP
		{
			name = Monoprop Oxygen Fuel Cell
			desc = An emergency fuel cell that burns <b>MonoPropellant</b> and <b>Oxygen</b> gas, producing <b>Water</b> and <b>Nitrogen</b> gas as by-products.
			tech = advElectrics
			mass = 0.1
			cost = 1000

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MonopropFuelCell
			}
		}
	}
	RESOURCE
	{
		name = Food
		amount = 100
		maxAmount = 100
	}
	RESOURCE
	{
		name = ElectricCharge
		amount = 2000
		maxAmount = 2000
	}
	RESOURCE
	{
		name = Water
		amount = 70
		maxAmount = 70
	}
	RESOURCE
	{
		name = Oxygen
		amount = 5000
		maxAmount = 5000
	}
	RESOURCE
	{
		name = CarbonDioxide
		amount = 0
		maxAmount = 1000
	}
	RESOURCE
	{
		name = Nitrogen
		amount = 4000
		maxAmount = 4000
	}
	RESOURCE
	{
		name = Waste
		amount = 0
		maxAmount = 4
	}
	RESOURCE
	{
		name = Shielding
		amount = 0
		maxAmount = 10
	}
	
}

@PART[KC-MV-domeglass]:FOR[KolonyConstructs]:NEEDS[Kerbalism]
{
	MODULE
	{
		name = Greenhouse
		crop_resource = Food								// name of resource produced by harvests
		// Twice as effective as kerbalism-greenhouse part. 
		// See https://forum.kerbalspaceprogram.com/index.php?/topic/172400-131145-kerbalism-v180/&page=32&tab=comments#comment-3446891 for details.

		// This greenhouse has 18 independent sections! It's 18 staged crops in rotation. Almost non-stop production, but each harvest is 18 times smaller.
		crop_size = 3.0625									// 18 times less harvest than 2x"kerbalism-greenhouse"
		crop_rate = 0.00000416664					 // but you can harvest 18 times more often due to independent sections!
		ec_rate = 5												 // 2x"kerbalism-greenhouse"
		light_tolerance = 400.0						 // minimum lighting flux required for growth, in W/m^2
		pressure_tolerance = 0.1						// minimum pressure required for growth, in sea level atmospheres
		radiation_tolerance = 0.000008333	 // maximum radiation allowed for growth in rad/s, considered after shielding is applied
		shutters = 25DoorsOpen							// animation to manipulate shutters
		animBackwards = True

		INPUT_RESOURCE
		{
			name = Ammonia
			rate = 0.00019140625							// 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = Water
			rate = 0.0000063802							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = WasteAtmosphere						// Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
			rate = 0.0024915995							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = CarbonDioxide							// Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
																				// present then it will be used in place of CO2 injection
			rate = 0.00083053315							// 2x"kerbalism-greenhouse"
		}

		// Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
		// CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
		// If there is not enough resources then the plants will suffer.

		OUTPUT_RESOURCE
		{
			name = Oxygen
			rate = 0.0034475965							 // 200% of oxygen required by 1 crew member
		}
	}

	RESOURCE
	{
		name = Ammonia
		amount = 544												// 2x"kerbalism-greenhouse"
		maxAmount = 544
	}

	RESOURCE
	{
		name = CarbonDioxide
		amount = 9000											 // 2x"kerbalism-greenhouse"
		maxAmount = 9000
	}

	// To support pressure control
	@MODULE[Configure]
	{
		@SETUP[Pressure?Control]
		{
			!RESOURCE[Nitrogen] {}
		}
	}

	RESOURCE
	{
		name = Nitrogen
		amount = 10000											// 1x"kerbalism-greenhouse" as it does not mess with crops
		maxAmount = 10000
	}

	RESOURCE
	{
		name = Water
		amount = 22												 // 2x"kerbalism-greenhouse"
		maxAmount = 22
	}
}

@PART[KC-MV-domeshop]:NEEDS[Kerbalism]:FOR[KolonyConstructs]
{
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]] {}
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[LiquidFuel]] {}
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Oxidizer]] {}
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Monoprop]] {}
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[MonoPropellant]] {}
  !MODULE[ModuleOverheatDisplay] {}
  !MODULE[ModuleCoreHeat] {}

  MODULE
  {
    name = ProcessController
    resource = _WaterElectrolysis
    title = #KERBALISM_WaterElectrolysis_title//Water electrolysis
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _Sabatier
    title = #KERBALISM_SabatierProcess_title//Sabatier process
    capacity = 1
    valve_i = 2 // workaround until we have a better way to deal with dump valves
  }

  MODULE
  {
    name = ProcessController
    resource = _Haber
    title = #KERBALISM_HaberProcess_title//Haber process
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _WasteIncinerator
    title = Waste incinerator
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _WasteCompressor
    title = #KERBALISM_WasteCompressor_title//Waste compressor
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _Anthraquinone
    title = #KERBALISM_AnthraquinoneProcess_title//Anthraquinone process
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _HydrazineProduction
    title = #KERBALISM_HydrazineProduction_title//Hydrazine production
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _NitroHydrazine
    title = #KERBALISM_HydrazineProductionN2_title//Hydrazine production N2
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _MRE
    title = #KERBALISM_MoltenRegolithElectrolysis_title//MRE
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _SOE
    title = #KERBALISM_SolidOxideElectrolysis_title//SOE
    capacity = 1
  }

  MODULE
  {
    name = ProcessController
    resource = _SCO
    title = #KERBALISM_SelectiveCatalyticOxidation_title//SCO
    capacity = 1
  }

  MODULE
  {
    name = Configure
    title = Chemical Plant
    slots = 1

    UPGRADES
    {
      UPGRADE
      {
        name__ = Upgrade-Slots
        techRequired__ = electronics
        slots = 0
      }
    }

    SETUP
    {
      name = Water Electrolysis
      desc = #KERBALISM_WaterElectrolysis_desc//Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _WaterElectrolysis
      }
    }

    SETUP
    {
      name = Sabatier Process
      desc = #KERBALISM_SabatierProcess_desc//<b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _Sabatier
      }
    }

    SETUP
    {
      name = Haber Process
      desc = #KERBALISM_HaberProcess_desc//Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _Haber
      }
    }

    SETUP
    {
      name = Waste Incinerator
      desc = #KERBALISM_WasteIncinerator_desc//Produce <b>CarbonDioxide</b> and <b>Water</b> by combustion of <b>Waste</b> with <b>Oxygen</b>. Includes a small exhaust turbine generator. If needed <b>Water</b> will be vented to continue <b>CarbonDioxide</b> extraction.
      tech = precisionEngineering

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _WasteIncinerator
      }
    }

    SETUP
    {
      name = Waste Compressor
      desc = #KERBALISM_WasteCompressor_desc//Compact <b>Waste</b> to the density of <b>shielding material</b>.
      tech = precisionEngineering

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _WasteCompressor
      }
    }

    SETUP
    {
      name = Anthraquinone Process
      desc = #KERBALISM_AnthraquinoneProcess_desc//Synthesize <b>Oxidizer</b> using a redox of <b>Oxygen</b> and <b>Hydrogen</b>.
      tech = advScienceTech

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _Anthraquinone
      }
    }

    SETUP
    {
      name = Hydrazine Production
      desc = #KERBALISM_HydrazineProduction_desc//<b>Oxidizer</b> and <b>Ammonia</b> react to produce <b>MonoPropellant</b>, <b>Oxygen</b> and <b>Water</b>.
      tech = advScienceTech

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _HydrazineProduction
      }
    }

    SETUP
    {
      name = Hydrazine Production (N2 Injection)
      desc = #KERBALISM_HydrazineProductionN2_desc//<b>Oxidizer</b> and <b>Ammonia</b> with <b>Nitrogen</b> injection react to produce <b>MonoPropellant</b> and <b>Oxygen</b>.
      tech = experimentalScience

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _NitroHydrazine
      }
    }

    SETUP
    {
      name = Solid Oxide Electrolysis
      desc = #KERBALISM_SolidOxideElectrolysis_desc//Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
      tech = experimentalScience

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _SOE
      }
    }

    SETUP
    {
      name = Molten Regolith Electrolysis
      desc = #KERBALISM_MoltenRegolithElectrolysis_desc//Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Ore</b>. If needed <b>CarbonDioxide</b> and/or <b>Shielding</b> will be vented in order to continue the <b>Oxygen</b> extraction.
      tech = advScienceTech

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _MRE
      }
    }

    SETUP
    {
      name = Selective Catalytic Oxidation
      desc = #KERBALISM_SelectiveCatalyticOxidation_desc//<b>Ammonia</b> and <b>Oxygen</b> react with a hydrotalcite-like catalyst to produce <b>Nitrogen</b> and <b>Water</b>.
      tech = experimentalScience

      MODULE
      {
        type = ProcessController
        id_field = resource
        id_value = _SCO
      }
    }
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = ProcessController
    title = #KERBALISM_ChemicalPlant_title//Chemical Plant
    repair = Engineer
    mtbf = 72576000
    extra_cost = 1.0
    extra_mass = 0.2
  }
}

